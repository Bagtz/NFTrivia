import { App, InspectRequestData } from '@deroll/core';
import { MatchResult, MatchFunction, Path } from 'path-to-regexp';

type Handler<P extends object = object> = (match: MatchResult<P>, matchedRoute: Route<P>) => string;
type Route<P extends object> = {
    matcher: MatchFunction<P>;
    handler: Handler<P>;
};
type RouterOptions = {
    app: App;
};
declare class Router {
    private options;
    private routes;
    constructor(options: RouterOptions);
    add<P extends object>(path: Path, handler: Handler<P>): Route<P>;
    private handle;
    handler(data: InspectRequestData): Promise<void>;
}
declare const createRouter: (options: RouterOptions) => Router;

export { type Handler, Router, type RouterOptions, createRouter };
