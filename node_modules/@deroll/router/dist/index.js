"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Router: () => Router,
  createRouter: () => createRouter
});
module.exports = __toCommonJS(src_exports);
var import_path_to_regexp = require("path-to-regexp");
var import_viem = require("viem");
var Router = class {
  options;
  routes;
  constructor(options) {
    this.options = options;
    this.routes = [];
    this.handler = this.handler.bind(this);
  }
  add(path, handler) {
    const keys = [];
    const matcher = (0, import_path_to_regexp.match)(path, { decode: decodeURIComponent });
    const route = { matcher, handler };
    this.routes.push(route);
    return route;
  }
  handle(url) {
    for (const route of this.routes) {
      const match2 = route.matcher(url);
      if (match2) {
        try {
          return route.handler(match2, route);
        } catch (e) {
          throw new Error(`Error handling route ${url}`, {
            cause: e
          });
        }
      }
    }
    return void 0;
  }
  async handler(data) {
    const url = (0, import_viem.bytesToString)((0, import_viem.toBytes)(data.payload));
    const result = this.handle(url);
    if (result) {
      await this.options.app.createReport({
        payload: (0, import_viem.toHex)((0, import_viem.stringToBytes)(result))
      });
    }
  }
};
var createRouter = (options) => {
  return new Router(options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Router,
  createRouter
});
